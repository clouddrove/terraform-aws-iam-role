---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS IAM Role

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-iam-role

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-aws-iam-role/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-iam-role/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-aws-iam-role/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-aws-iam-role/actions/workflows/terraform.yml"

prerequesties:
  - name: Terraform 1.5.4
    url: https://learn.hashicorp.com/terraform/getting-started/install.html

#  description of this project
description: |-
  Terraform module to create Iam role resource on AWS.

# extra content
# please not remove these two If you need add more
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage: |-
  ### Simple example
  Here is an example of how you can use this module in your inventory structure:
  ```hcl
        module "iam-role" {
        source              = "clouddrove/iam-role/aws"
        version             = "1.3.0"

        name                = "iam-role"
        application         = "clouddrove"
        environment         = "test"
        label_order         = ["environment", "name"]
        assume_role_policy  = data.aws_iam_policy_document.default.json
        managed_policy_arns = 
        policy_enabled      = true
        policy              = data.aws_iam_policy_document.iam-policy.json
      }

        data "aws_iam_policy_document" "default" {
        statement {
        effect  = "Allow"
        actions = ["sts:AssumeRole"]
        principals {
        type        = "Service"
        identifiers = ["ec2.amazonaws.com"]
        }
        }
      }

        data "aws_iam_policy_document" "iam-policy" {
        statement {
        actions = [
        "ssm:UpdateInstanceInformation",
        "ssmmessages:CreateControlChannel",
        "ssmmessages:CreateDataChannel",
        "ssmmessages:OpenControlChannel",
        "ssmmessages:OpenDataChannel"    ]
        effect    = "Allow"
        resources = ["*"]
        }
      }
  ```
